@startuml WebAccessAppScenario
!pragma teoz true

title "Webaccap App Example Scenario"

hide footbox
actor Customer


box "Internal Services" #LightBlue
participant GatewayService
participant LoadBalancer
participant DiscoveryService
participant AuthService
end box

box "Microservices"
participant WebAccessAppMS
end box
loop Periodically
GatewayService -> GatewayService : block = createBlock()
GatewayService -> GatewayService : addTransactions(transactionList)
GatewayService -> GatewayService : appendChain(block)
end
Customer -> GatewayService ++ : webacc/\ngreeting(webaccInf, authInf)
GatewayService -> LoadBalancer ++ : webacc/\ngreeting(webaccInf, authInf)
LoadBalancer -> DiscoveryService ++ : getServiceInfo(webacc)
return serviceAddress 
LoadBalancer -> WebAccessAppMS ++ : serviceAddress/webacc/greeting(webaccInf, authInf)
LoadBalancer -> LoadBalancer: tx = addTransaction(CB,WebAccessAppMS,webaccInf)
LoadBalancer ->? : << diffuse tx to all >>
WebAccessAppMS -> AuthService ++ : pushMessage(authInf)
AuthService -> WebAccessAppMS -- : dispatch(OK)
return return OK 
return return OK 

@enduml