@startuml CustomerRegistrationFailureScenarioAuthServiceUnavailable
!pragma teoz true

title "Customer Registration Failure Scenario: AuthService Unavailable"

hide footbox
actor Customer


box "Internal Services" #LightBlue
collections GatewayService
collections DiscoveryService
collections AuthService
queue MessageQueueBroker
end box

box "User Defined Services"
collections CustomerService
database CustomerDB
database UserDB
collections ProductService
end box

Customer -> GatewayService ++ : customer/registerCustomer(customerInf, userInf)
GatewayService -> LoadBalancer ++ : customer/\nregister(customerInf, authInf)
LoadBalancer -> DiscoveryService ++ : getServiceInfo(customerService)
return serviceAddress 
LoadBalancer -> CustomerService ++ : serviceAddress/customer/registerCustomer(customerInf, authInf)
CustomerService -> CustomerDB ++: insert(customerInf)
return return OK 
CustomerService -> MessageQueueService ++ : pushMessage(userInf)
MessageQueueService ->x AuthService -- : dispatch(newCustomerInf)
note over AuthService: Service Not Available \nThere is no dispatch
...Expiry Time...
CustomerService -> CustomerDB ++: rollback(customerInf)
return return OK 
return return TIME_OUT 
return return TIME_OUT 


@enduml