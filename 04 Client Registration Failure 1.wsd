@startuml CustomerRegistrationFailureScenarioAuthServiceUnavailable
!pragma teoz true

title "Customer Registration Failure Scenario: AuthService Unavailable"

hide footbox
actor Customer


box "Internal Services" #LightBlue
collections GatewayService
collections LoadBalancer
collections DiscoveryService
collections AuthService
queue MessageQueueBroker
end box

box "Microservices"
collections MS1
database MS1DB
database UserDB
end box

Customer -> GatewayService ++ : customer/registerCustomer(ms1Inf, userInf)
GatewayService -> LoadBalancer ++ : ms1/\napi(ms1Inf, authInf)
LoadBalancer -> DiscoveryService ++ : getServiceInfo(MS1)
return serviceAddress 
LoadBalancer -> MS1 ++ : serviceAddress/ms1/api(ms1Inf, authInf)
MS1 -> MS1DB ++: insert(ms1Inf)
return return OK 
MS1 -> MessageQueueBroker ++ : pushMessage(userInf)
MessageQueueBroker ->x AuthService -- : dispatch(newms1Inf)
note over AuthService: Service Not Available \nThere is no dispatch
...Expiry Time...
MS1 -> MS1DB ++: rollback(ms1Inf)
return return OK 
return return TIME_OUT 
return return TIME_OUT 
return return TIME_OUT 


@enduml