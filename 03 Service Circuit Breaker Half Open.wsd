@startuml CustomerRegistrationScenario
!pragma teoz true

title "Circuit Breaker Close Scenario"

hide footbox
actor Customer


box "Internal Services" #LightBlue
collections CircuitBreaker
end box

box "Microservices"
collections MS1
end box

Customer -> CircuitBreaker ++ : ms1/\napi(ms1Inf)
return Circuit Open

...Time out...
CircuitBreaker -> CircuitBreaker: Circuit Half Open

alt when state is half open and connection problem is running
Customer -> CircuitBreaker ++ : ms1/\napi(ms1Inf)
CircuitBreaker -> MS1 ++ : ms1/\napi(ms1Inf)
CircuitBreaker -> CircuitBreaker: tx = addTransaction(CB,MS1,ms1Inf)
CircuitBreaker ->? : << diffuse tx to all >>
return Connection Problem
CircuitBreaker -> CircuitBreaker: Circuit Open
return Connection Problem

else when state is half open and connection problem is resolved
Customer -> CircuitBreaker ++ : ms1/\napi(ms1Inf)
CircuitBreaker -> MS1 ++ : ms1/\napi(ms1Inf)
CircuitBreaker -> CircuitBreaker: tx = addTransaction(CB,MS1,ms1Inf)
CircuitBreaker ->? : << diffuse tx to all >>
return OK
CircuitBreaker -> CircuitBreaker: Circuit Close
return OK
end



Customer -> CircuitBreaker ++ : ms1/\napi(ms1Inf)
CircuitBreaker -> MS1 ++ : ms1/\napi(ms1Inf)
CircuitBreaker -> CircuitBreaker: tx = addTransaction(CB,MS1,ms1Inf)
CircuitBreaker ->? : << diffuse tx to all >>
return Connection Problem
return Connection Problem






@enduml